apiVersion: apps/v1
kind: Deployment
metadata:
  name: emailservice
  labels:
    app: emailservice
spec:
  replicas: 3
  selector:
    matchLabels:
      app: emailservice
  template:
    metadata:
      labels:
        app: emailservice
    spec:
      containers:
      - name: service
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.6.0
        ports: 
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]


---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: emailservice
spec:
  type: ClusterIP
  selector:
    app: emailservice
  ports:
  - name: emailservice
    protocol: TCP
    port: 5000
    targetPort: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendationservice
  labels:
    app: recommendationservice
spec:
  replicas: 3
  selector:
    matchLabels:
      app: recommendationservice
  template:
    metadata:
      labels:
        app: recommendationservice
    spec:
      containers:
      - name: service
        image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.6.0
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]


---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: recommendationservice
spec:
  selector:
    app: recommendationservice
  type: ClusterIP
  ports:
  - name: recommendationservice
    protocol: TCP
    port: 8080
    targetPort: 8080
    
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: productcatalogservice
  labels:
    app: productcatalogservice
spec:
  replicas: 3
  selector:
    matchLabels:
      app: productcatalogservice
  template:
    metadata:
      labels:
        app: productcatalogservice
    spec:
      containers:
      - name: service
        image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.6.0
        ports:
        - containerPort: 3550
        env:
        - name: PORT
          value: "3550"
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:3550"]

---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: productcatalogservice
spec:
  selector:
    app: productcatalogservice
  type: ClusterIP
  ports:
  - name: productcatalogservice
    protocol: TCP
    port: 3550
    targetPort: 3550
    
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: paymentservice
  labels:
    app: paymentservice
spec:
  replicas: 3
  selector:
    matchLabels:
      app: paymentservice
  template:
    metadata:
      labels:
        app: paymentservice
    spec:
      containers:
      - name: service
        image: gcr.io/google-samples/microservices-demo/paymentservice:v0.6.0
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]

---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: paymentservice
spec:
  selector:
    app: paymentservice
  type: ClusterIP
  ports:
  - name: paymentservice
    protocol: TCP
    port: 50051
    targetPort: 50051
    
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: currencyservice
  labels:
    app: currencyservice
spec:
  replicas: 3
  selector:
    matchLabels:
      app: currencyservice
  template:
    metadata:
      labels:
        app: currencyservice
    spec:
      containers:
      - name: service
        image: gcr.io/google-samples/microservices-demo/currencyservice
        ports:
        - containerPort: 7000
        env:
        - name: PORT
          value: "7000"
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7000"]

---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: currencyservice
spec:
  selector:
    app: currencyservice
  type: ClusterIP
  ports:
  - name: currencyservice
    protocol: TCP
    port: 7000
    targetPort: 7000
    
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: shippingservice
  labels:
    app: shippingservice
spec:
  replicas: 3
  selector:
    matchLabels:
      app: shippingservice
  template:
    metadata:
      labels:
        app: shippingservice
    spec:
      containers:
      - name: service
        image: gcr.io/google-samples/microservices-demo/shippingservice:v0.6.0
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]

---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: shippingservice
spec:
  selector:
    app: shippingservice
  type: ClusterIP
  ports:
  - name: shippingservice
    protocol: TCP
    port: 50051
    targetPort: 50051
    
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  labels:
    app: adservice
spec:
  replicas: 3
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - name: service
        image: gcr.io/google-samples/microservices-demo/adservice:v0.6.0
        ports:
        - containerPort: 9555
        env: 
        - name: PORT
          value: "9555"
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:9555"]

---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: adservice
spec:
  selector:
    app: adservice
  type: ClusterIP
  ports:
  - name: adservice
    protocol: TCP
    port: 9555
    targetPort: 9555
    
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartservice
  labels:
    app: cartservice
spec:
  replicas: 3
  selector:
    matchLabels:
      app: cartservice
  template:
    metadata:
      labels:
        app: cartservice
    spec:
      containers:
      - name: service
        image: gcr.io/google-samples/microservices-demo/cartservice:v0.6.0
        ports:
        - containerPort: 7070
        env:
        - name: PORT 
          value: "7070"
        - name: REDIS_ADDR
          value: "redis-cart:6379"
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:6379"]

---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: cartservice
spec:
  selector:
    app: cartservice
  type: ClusterIP
  ports:
  - name: cartservice
    protocol: TCP
    port: 7070
    targetPort: 7070
    
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cart
  labels:
    app: redis-cart
spec:
  replicas: 3
  selector:
    matchLabels:
      app: redis-cart
  template:
    metadata:
      labels:
        app: redis-cart
    spec:
      containers:
      - name: redis-cart
        image: redis:alpine
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        emptyDir: {}
      

---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: redis-cart
spec:
  selector:
    app: redis-cart
  type: ClusterIP
  ports:
  - name: redis-cart
    protocol: TCP
    port: 6379
    targetPort: 6379
    
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkoutservice
  labels:
    app: checkoutservice
spec:
  replicas: 3
  selector:
    matchLabels:
      app: checkoutservice
  template:
    metadata:
      labels:
        app: checkoutservice
    spec:
      containers:
      - name: service
        image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.6.0
        ports:
        - containerPort: 5050
        env: 
        - name:  PORT
          value: "5050"
        - name:  PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        - name:  SHIPPING_SERVICE_ADDR
          value: "shippingservice:50051"
        - name:  PAYMENT_SERVICE_ADDR
          value: "paymentservie:5001"
        - name: EMAIL_SERVICE_ADDR
          value: "emailservice:5000"
        - name: CURRENCY_SERVICE_ADDR
          value: "currencyservice:7000"
        - name: CART_SERVICE_ADDR
          value: "cartservice:7070"
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:5050"]
        


---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: checkoutservice
spec:
  selector:
    app: checkoutservice
  type: ClusterIP
  ports:
  - name: checkoutservice
    protocol: TCP
    port: 5050
    targetPort: 5050
    
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: gcr.io/google-samples/microservices-demo/frontend:v0.6.0
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name:  PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        - name:  SHIPPING_SERVICE_ADDR
          value: "shippingservice:50051"
        - name:  PAYMENT_SERVICE_ADDR
          value: "paymentservie:5001"
        - name: EMAIL_SERVICE_ADDR
          value: "emailservice:5000"
        - name: CURRENCY_SERVICE_ADDR
          value: "currencyservice:7000"
        - name: CART_SERVICE_ADDR
          value: "cartservice:7070"
        - name: RECOMMENDATION_SERVICE_ADDR
          value: "recommendationservice:8080"
        - name: CHECKOUT_SERVICE_ADDR
          value: "checkoutservice:5050"
        - name: AD_SERVICE_ADDR
          value: "adservice:9555"
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]

---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend
  type: NodePort
  ports:
  - name: frontend
    protocol: TCP
    port: 80
    targetPort: 8080
    nodePort: 30007
    
---

